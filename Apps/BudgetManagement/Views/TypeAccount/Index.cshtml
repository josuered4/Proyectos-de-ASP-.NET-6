@model IEnumerable<TypeAccountModel>
@{
    ViewData["Title"] = "Tipos Cuenta";
}

<h1>Tipos de Cuentas</h1>
<h5>
    El tipo de cuenta se refiere a cómo podemos agrupar cuentas.
    Ejemplos: Préstamos, targetas de crédito, etc.
</h5>

<a asp-action="FormAccount" class="btn btn-primary mb-3">Crear nuevo</a>

<table class="table">
    <thead>
        <tr>
            <th>Acciones</th>
            <th>Nombre</th>
        </tr>
    </thead>
    <tbody id="reorderable">
        @foreach (var typeAccount in Model)
        {
            <tr>
                <td>
                    <input type="hidden" value="@typeAccount.Id" class="ids"/>
                    <a class="btn btn-primary" asp-action="FormUpdateTypeAccount" asp-route-id="@typeAccount.Id">Editar</a>
                    <a class="btn btn-danger" asp-action="Delete"  asp-route-id="@typeAccount.Id">Borrar</a>
                </td>
                <td>
                    @typeAccount.Name
                </td>
            </tr>
        }
    </tbody>
</table>

@section Scripts
{
    <script>
        $(function(){
            const urlOrder = '@Url.Action("OrderTypesAccount")';
            $('#reorderable').sortable({
                stop: async function(e, ui){
                        updateOrders();
                }
            });

            async function updateOrders(){
                const ids = getIdElements(); 
                await sendIdsBackend(ids);
            }

            function getIdElements(){
                const ids = $(".ids").map(function(){
                    return $(this).val();
                }).get();
                return ids;
            }

            async function sendIdsBackend(ids){
                var data = JSON.stringify(ids);

                await fetch(urlOrder, {
                    method: 'POST', 
                    body: data, 
                    headers: {
                        'Content-Type' : 'application/json'
                    }
                });
            }
        });
    </script>
}